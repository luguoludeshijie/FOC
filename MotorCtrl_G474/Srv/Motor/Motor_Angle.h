/*******************************************************************************
 *
 * 文件名称: xx.h
 * 版 本 号: V1.0 
 * 作    者: linbo.liu
 * 生成日期: 2024年x月x日
 * 功能描述: 
 *
 *******************************************************************************/
#ifndef _MOTOR_ANGLE_H_
#define _MOTOR_ANGLE_H_
/*******************************************************************************
 *-----------------------------------头文件-------------------------------------
******************************************************************************/
#include "Srv.h"

/*******************************************************************************
 *-----------------------------------宏定义-------------------------------------
******************************************************************************/
//霍尔未校准参数
#define _60_RAD 1.0471975511965977f
#define _120_RAD 2.0943951023931954f
#define _180_RAD 3.1415926535897932f
#define _240_RAD 4.1887902047863909f
#define _300_RAD 5.2359877559829887f
#define _360_OR_0_RAD 0.0f 

//霍尔正转校准位置参数和对应扇区大小
#define _60_RAD_CALIB 1.36268532f
#define _120_RAD_CALIB 2.34578514f
#define _180_RAD_CALIB 3.15171742f
#define _240_RAD_CALIB 4.50899935f
#define _300_RAD_CALIB 5.50435638f
#define _360_OR_0_RAD_CALIB 0.0f 

#define HALL_SECTOR_0 1.36268532f
#define HALL_SECTOR_1 0.983099818f
#define HALL_SECTOR_2 0.805932224f
#define HALL_SECTOR_3 1.3572818f
#define HALL_SECTOR_4 0.995357156f
#define HALL_SECTOR_5 0.778828979f

//霍尔反转校准位置参数和对应扇区大小
#define _60_RAD_CALIB_C 1.01931787f
#define _120_RAD_CALIB_C 1.8267622f
#define _180_RAD_CALIB_C 3.14416599f
#define _240_RAD_CALIB_C 4.17973375f
#define _300_RAD_CALIB_C 4.95671272f
#define _360_OR_0_RAD_CALIB_C 0.0f 

#define HALL_SECTOR_0_C 1.01931787f
#define HALL_SECTOR_1_C 0.807444274f
#define HALL_SECTOR_2_C 1.31740391f
#define HALL_SECTOR_3_C 1.03556788f
#define HALL_SECTOR_4_C 0.776979029f
#define HALL_SECTOR_5_C 1.32647204f

//霍尔Port状态读取
#define HALL_U_GET HAL_GPIO_ReadPin(Hall_U_GPIO_Port, Hall_U_Pin)
#define HALL_V_GET HAL_GPIO_ReadPin(Hall_V_GPIO_Port, Hall_V_Pin)
#define HALL_W_GET HAL_GPIO_ReadPin(Hall_W_GPIO_Port, Hall_W_Pin)

/*******************************************************************************
 *---------------------------------数据类型定义----------------------------------
******************************************************************************/
typedef struct
{
    float Foc_freq;                     // foc执行频率
    float Hall_freq;                    // 霍尔定时器频率

    // SPEED_t speed;
    float PhaseShift;                   // 与0°之间的偏移值

    float Sector_ElAngle;               // 当前的扇区起始角度
    float Sector_ElAngle_Sum;           // 扇区积分的电角度
    float Sector_CompIntegral;          // 扇区补偿积分
    float Sector_CompDifferential[6];   // 扇区补偿微分
    float AvrElSpeed;                   // 平均电角度转速rad/s
    float AvrElSpeedDpp;                // 平均的dpp, 也就是每个foc周期内增加的电角度

    int8_t Sector;                      // 第几个扇区
    int8_t Sector_pre;                  // 上一个扇区
    uint8_t Sector_Map[7];              // 真实扇区映射
    uint16_t Sector_tick[7];            // 每个扇区内的定时器滴答值
    uint16_t Sector_size[7];            // 每个霍尔区间的大小: 单位:弧度
    uint16_t Sector_pos[7];             // 每个霍尔区间的起始位置
    uint16_t Sector_size_c[7];          // 反向时每个霍尔区间的大小: 单位:弧度
    uint16_t Sector_pos_c[7];           // 反向时每个霍尔区间的起始位置

    MOVE_FILTER_T Secsize_filter;       //扇区时间计算的滑动滤波器
    // MOVE_FILTER_T Speed_filter;      //速度计算的滑动滤波器
}FOC_HALL_T;

/*******************************************************************************
 *-----------------------------------常量定义------------------------------------
******************************************************************************/


/*******************************************************************************
 *-----------------------——--------全局变量定义----------------------------------
******************************************************************************/


/*******************************************************************************
 *-----------------------------------函数接口------------------------------------
******************************************************************************/
extern void Motor_HALLInit(void);
extern void BLDCMotor_PhaseCtrl(int32_t HALLPhase );

/*******************************************************************************
 *---------------------------—----—--变量接口------------------------------------
******************************************************************************/
 #endif